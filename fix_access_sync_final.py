#!/usr/bin/env python3
"""
–û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –î–û–°–¢–£–ü–û–í
–°–æ–∑–¥–∞–µ—Ç shared —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à –º–µ–∂–¥—É –∞–¥–º–∏–Ω –±–æ—Ç–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º
"""

import os
import json
import time
from datetime import datetime

# –ü—É—Ç—å –∫ –æ–±—â–µ–º—É —Ñ–∞–π–ª—É –∫–µ—à–∞
SHARED_CACHE_FILE = "data/shared_access_cache.json"

def create_shared_cache_system():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ–±—â–µ–≥–æ –∫–µ—à–∞ –¥–æ—Å—Ç—É–ø–æ–≤"""
    
    print("üîß –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –û–ë–©–ï–ì–û –ö–ï–®–ê –î–û–°–¢–£–ü–û–í")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("data", exist_ok=True)
    print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data —Å–æ–∑–¥–∞–Ω–∞")
    
    # 2. –ü–∞—Ç—á–∏–º AccessManager –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞
    patch_code = '''
    def _load_shared_cache(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—â–∏–π –∫–µ—à –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists("{cache_file}"):
                with open("{cache_file}", "r", encoding="utf-8") as f:
                    data = json.load(f)
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    if time.time() - data.get("last_update", 0) < 30:  # 30 —Å–µ–∫—É–Ω–¥
                        return data.get("cache", {{}})
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—â–µ–≥–æ –∫–µ—à–∞: {{e}}")
        return {{}}
    
    def _save_shared_cache(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±—â–∏–π –∫–µ—à –≤ —Ñ–∞–π–ª"""
        try:
            cache_data = {{
                "cache": self._access_cache,
                "last_update": time.time(),
                "updated_by": "AccessManager"
            }}
            with open("{cache_file}", "w", encoding="utf-8") as f:
                json.dump(cache_data, f, ensure_ascii=False, indent=2, default=str)
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–µ—à–∞: {{e}}")
    
    def _sync_with_shared_cache(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å –æ–±—â–∏–º –∫–µ—à–µ–º"""
        shared_cache = self._load_shared_cache()
        if shared_cache:
            self._access_cache.update(shared_cache)
            self.logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –æ–±—â–∏–º –∫–µ—à–µ–º: {{len(shared_cache)}} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    '''.format(cache_file=SHARED_CACHE_FILE)
    
    # 3. –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π AccessManager
    with open("utils/access_manager.py", "r", encoding="utf-8") as f:
        content = f.read()
    
    # 4. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if "import json" not in content:
        content = content.replace("import logging", "import logging\nimport json\nimport time")
    
    # 5. –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –≤ –∫–ª–∞—Å—Å AccessManager
    if "_load_shared_cache" not in content:
        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü –∫–ª–∞—Å—Å–∞ AccessManager –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã
        class_end = content.find("\n# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä")
        if class_end == -1:
            class_end = content.find("\ndef add_user_access")
        
        if class_end != -1:
            content = content[:class_end] + patch_code + content[class_end:]
    
    # 6. –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ _sync_access_lists
    if "_sync_with_shared_cache()" not in content:
        content = content.replace(
            "self._last_sync = datetime.now()",
            "self._last_sync = datetime.now()\n        self._save_shared_cache()"
        )
    
    # 7. –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ force_sync
    if "_sync_with_shared_cache" not in content:
        content = content.replace(
            "def force_sync(self):",
            "def force_sync(self):\n        \"\"\"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –æ–±—â–∏–º –∫–µ—à–µ–º\"\"\"\n        self._sync_with_shared_cache()"
        )
    
    # 8. –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ç—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open("utils/access_manager.py", "w", encoding="utf-8") as f:
        f.write(content)
    
    print("‚úÖ AccessManager –ø—Ä–æ–ø–∞—Ç—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±—â–∏–º –∫–µ—à–µ–º")
    
    # 9. –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫–µ—à
    try:
        import sys
        sys.path.insert(0, './utils')
        from access_manager import get_access_manager
        
        manager = get_access_manager()
        manager.force_sync()
        print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–π –∫–µ—à —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–µ—à–∞: {e}")
    
    print("\nüéâ –°–ò–°–¢–ï–ú–ê –û–ë–©–ï–ì–û –ö–ï–®–ê –°–û–ó–î–ê–ù–ê!")
    print(f"üìÅ –§–∞–π–ª –∫–µ—à–∞: {SHARED_CACHE_FILE}")
    print("\nüîÑ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï –û–ë–ê –ë–û–¢–ê –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
    print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç (Ctrl+C)")
    print("2. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç (Ctrl+C)")  
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç: source test_env/bin/activate && python admin_bot/main.py")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: source test_env/bin/activate && python main.py")

if __name__ == "__main__":
    create_shared_cache_system() 
"""
–û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –î–û–°–¢–£–ü–û–í
–°–æ–∑–¥–∞–µ—Ç shared —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à –º–µ–∂–¥—É –∞–¥–º–∏–Ω –±–æ—Ç–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º
"""

import os
import json
import time
from datetime import datetime

# –ü—É—Ç—å –∫ –æ–±—â–µ–º—É —Ñ–∞–π–ª—É –∫–µ—à–∞
SHARED_CACHE_FILE = "data/shared_access_cache.json"

def create_shared_cache_system():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ–±—â–µ–≥–æ –∫–µ—à–∞ –¥–æ—Å—Ç—É–ø–æ–≤"""
    
    print("üîß –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –û–ë–©–ï–ì–û –ö–ï–®–ê –î–û–°–¢–£–ü–û–í")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("data", exist_ok=True)
    print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data —Å–æ–∑–¥–∞–Ω–∞")
    
    # 2. –ü–∞—Ç—á–∏–º AccessManager –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞
    patch_code = '''
    def _load_shared_cache(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—â–∏–π –∫–µ—à –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists("{cache_file}"):
                with open("{cache_file}", "r", encoding="utf-8") as f:
                    data = json.load(f)
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    if time.time() - data.get("last_update", 0) < 30:  # 30 —Å–µ–∫—É–Ω–¥
                        return data.get("cache", {{}})
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—â–µ–≥–æ –∫–µ—à–∞: {{e}}")
        return {{}}
    
    def _save_shared_cache(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±—â–∏–π –∫–µ—à –≤ —Ñ–∞–π–ª"""
        try:
            cache_data = {{
                "cache": self._access_cache,
                "last_update": time.time(),
                "updated_by": "AccessManager"
            }}
            with open("{cache_file}", "w", encoding="utf-8") as f:
                json.dump(cache_data, f, ensure_ascii=False, indent=2, default=str)
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–µ—à–∞: {{e}}")
    
    def _sync_with_shared_cache(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å –æ–±—â–∏–º –∫–µ—à–µ–º"""
        shared_cache = self._load_shared_cache()
        if shared_cache:
            self._access_cache.update(shared_cache)
            self.logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –æ–±—â–∏–º –∫–µ—à–µ–º: {{len(shared_cache)}} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    '''.format(cache_file=SHARED_CACHE_FILE)
    
    # 3. –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π AccessManager
    with open("utils/access_manager.py", "r", encoding="utf-8") as f:
        content = f.read()
    
    # 4. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if "import json" not in content:
        content = content.replace("import logging", "import logging\nimport json\nimport time")
    
    # 5. –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –≤ –∫–ª–∞—Å—Å AccessManager
    if "_load_shared_cache" not in content:
        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü –∫–ª–∞—Å—Å–∞ AccessManager –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã
        class_end = content.find("\n# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä")
        if class_end == -1:
            class_end = content.find("\ndef add_user_access")
        
        if class_end != -1:
            content = content[:class_end] + patch_code + content[class_end:]
    
    # 6. –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ _sync_access_lists
    if "_sync_with_shared_cache()" not in content:
        content = content.replace(
            "self._last_sync = datetime.now()",
            "self._last_sync = datetime.now()\n        self._save_shared_cache()"
        )
    
    # 7. –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ force_sync
    if "_sync_with_shared_cache" not in content:
        content = content.replace(
            "def force_sync(self):",
            "def force_sync(self):\n        \"\"\"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –æ–±—â–∏–º –∫–µ—à–µ–º\"\"\"\n        self._sync_with_shared_cache()"
        )
    
    # 8. –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ç—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open("utils/access_manager.py", "w", encoding="utf-8") as f:
        f.write(content)
    
    print("‚úÖ AccessManager –ø—Ä–æ–ø–∞—Ç—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±—â–∏–º –∫–µ—à–µ–º")
    
    # 9. –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫–µ—à
    try:
        import sys
        sys.path.insert(0, './utils')
        from access_manager import get_access_manager
        
        manager = get_access_manager()
        manager.force_sync()
        print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–π –∫–µ—à —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–µ—à–∞: {e}")
    
    print("\nüéâ –°–ò–°–¢–ï–ú–ê –û–ë–©–ï–ì–û –ö–ï–®–ê –°–û–ó–î–ê–ù–ê!")
    print(f"üìÅ –§–∞–π–ª –∫–µ—à–∞: {SHARED_CACHE_FILE}")
    print("\nüîÑ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï –û–ë–ê –ë–û–¢–ê –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
    print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç (Ctrl+C)")
    print("2. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç (Ctrl+C)")  
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç: source test_env/bin/activate && python admin_bot/main.py")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: source test_env/bin/activate && python main.py")

if __name__ == "__main__":
    create_shared_cache_system() 