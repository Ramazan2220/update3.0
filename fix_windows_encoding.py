#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Windows Encoding Fix - –∑–∞–º–µ–Ω—è–µ—Ç —ç–º–æ–¥–∑–∏ –Ω–∞ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Windows cmd
"""

import os
import re
from pathlib import Path

# –°–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω —ç–º–æ–¥–∑–∏ –Ω–∞ —Ç–µ–∫—Å—Ç
EMOJI_REPLACEMENTS = {
    'üóÑÔ∏è': '[DB]',
    'üöÄ': '[START]', 
    '‚úÖ': '[OK]',
    'üìù': '[LOG]',
    'üèä‚Äç‚ôÇÔ∏è': '[POOL]',
    'üì¶': '[PKG]',
    'üñ•Ô∏è': '[SYS]',
    '‚ùå': '[ERR]',
    '‚è∞': '[WAIT]',
    'üîó': '[LINK]',
    'üõ°Ô∏è': '[SEC]',
    'üíæ': '[SAVE]',
    '‚ö°': '[FAST]',
    'üíø': '[DISK]',
    'üìä': '[STATS]',
    'üî•': '[HOT]',
    'üí§': '[SLEEP]',
    'üë•': '[USERS]',
    'üîÑ': '[RETRY]',
    '‚öôÔ∏è': '[SYS]',
    'üìà': '[GROW]',
    'üì§': '[OUT]',
    'üé®': '[DESIGN]',
    'üìã': '[LIST]',
    'üîç': '[SEARCH]',
    'üîß': '[TOOL]',
    'üêß': '[LINUX]',
    'üíª': '[WIN]',
    'üîí': '[LOCK]',
}

def replace_emoji_in_file(file_path):
    """–ó–∞–º–µ–Ω—è–µ—Ç —ç–º–æ–¥–∑–∏ –≤ —Ñ–∞–π–ª–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∞–Ω–∞–ª–æ–≥–∏"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
        for emoji, replacement in EMOJI_REPLACEMENTS.items():
            content = content.replace(emoji, replacement)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"[OK] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {file_path}")
            return True
        
        return False
        
    except Exception as e:
        print(f"[ERR] –û—à–∏–±–∫–∞ –≤ {file_path}: {e}")
        return False

def fix_main_files():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã —Å —ç–º–æ–¥–∑–∏"""
    files_to_fix = [
        'main.py',
        'database/connection_pool.py',
        'instagram/client_pool.py',
        'utils/system_monitor.py',
        'utils/task_queue.py',
        'instagram/lazy_client_factory.py',
        'instagram/client_adapter.py',
        'utils/smart_validator_service.py'
    ]
    
    fixed_count = 0
    for file_path in files_to_fix:
        if os.path.exists(file_path):
            if replace_emoji_in_file(file_path):
                fixed_count += 1
        else:
            print(f"[SKIP] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    print(f"\n[SUMMARY] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed_count}")
    return fixed_count

if __name__ == "__main__":
    print("[START] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows...")
    print("[LOG] –ó–∞–º–µ–Ω—è–µ–º —ç–º–æ–¥–∑–∏ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∞–Ω–∞–ª–æ–≥–∏...")
    
    fixed = fix_main_files()
    
    if fixed > 0:
        print(f"[OK] –ì–æ—Ç–æ–≤–æ! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed} —Ñ–∞–π–ª–æ–≤.")
        print("[LOG] –¢–µ–ø–µ—Ä—å –ª–æ–≥–∏ –Ω–µ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å UnicodeEncodeError –≤ Windows")
    else:
        print("[LOG] –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è") 