import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler
from telegram.filters import Filters
from telegram.ext import MessageHandler, CommandHandler

from config import ADMIN_USER_IDS
from utils.access_manager import has_access
from database.db_manager import add_instagram_account
from telegram.keyboards import get_accounts_menu_keyboard
from instagram.client import Client

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ cookies
COOKIES_FILE, COOKIES_TEXT = range(2)

def handle_cookies_menu(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Ä–∞–±–æ—Ç—ã —Å cookies"""
    user_id = update.effective_user.id
    
    if not has_access(user_id):
        update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    
    text = """üç™ **–£–ü–†–ê–í–õ–ï–ù–ò–ï COOKIES**

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**

1Ô∏è‚É£ **–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞** - –∑–∞–≥—Ä—É–∑–∫–∞ .json —Ñ–∞–π–ª–∞ —Å cookies
2Ô∏è‚É£ **–í–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º** - –≤–≤–æ–¥ cookies –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ  
3Ô∏è‚É£ **–≠–∫—Å–ø–æ—Ä—Ç cookies** - –≤—ã–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö cookies

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç—ã —Å cookies:"""
    
    keyboard = [
        [InlineKeyboardButton("üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", callback_data="cookies_upload_file")],
        [InlineKeyboardButton("üìù –í–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º", callback_data="cookies_input_text")],
        [InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç cookies", callback_data="cookies_export")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    
    query = update.callback_query if update.callback_query else None
    if query:
        query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')
    else:
        update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

def cookies_upload_file(update: Update, context: CallbackContext):
    """–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ cookies –∏–∑ —Ñ–∞–π–ª–∞"""
    query = update.callback_query
    
    text = """üìÅ **–ó–ê–ì–†–£–ó–ö–ê COOKIES –ò–ó –§–ê–ô–õ–ê**

üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**
1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ .json —Ñ–∞–π–ª —Å cookies
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
3. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç cookies

‚ö†Ô∏è **–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:** JSON —Å –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤ cookies

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å cookies:"""
    
    query.edit_message_text(text, parse_mode='Markdown')
    return COOKIES_FILE

def cookies_input_text(update: Update, context: CallbackContext):
    """–ù–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ cookies —Ç–µ–∫—Å—Ç–æ–º"""
    query = update.callback_query
    
    text = """üìù **–í–í–û–î COOKIES –¢–ï–ö–°–¢–û–ú**

üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ cookies –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
3. –ë–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ

‚ö†Ô∏è **–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞:**
```json
[
  {"name": "sessionid", "value": "your_session"},
  {"name": "csrftoken", "value": "your_token"}
]
```

–û—Ç–ø—Ä–∞–≤—å—Ç–µ cookies –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:"""
    
    query.edit_message_text(text, parse_mode='Markdown')
    return COOKIES_TEXT

def process_cookies_file(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å cookies"""
    try:
        document = update.message.document
        if not document.file_name.endswith('.json'):
            update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .json")
            return ConversationHandler.END
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        file = context.bot.get_file(document.file_id)
        file_content = file.download_as_bytearray()
        
        # –ü–∞—Ä—Å–∏–º JSON
        import json
        cookies_data = json.loads(file_content.decode('utf-8'))
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º cookies
        result = process_cookies_data(update.effective_user.id, cookies_data)
        
        if result['success']:
            update.message.reply_text(
                f"‚úÖ **Cookies —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!**\n\n"
                f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result['processed']} cookies\n"
                f"‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç–æ–≤: {result['accounts']} –Ω–∞–π–¥–µ–Ω–æ\n\n"
                f"üéØ Cookies –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!",
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ cookies:**\n\n{result['error']}",
                parse_mode='Markdown'
            )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ cookies: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç.")
    
    return ConversationHandler.END

def process_cookies_text(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ cookies –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–º"""
    try:
        import json
        cookies_text = update.message.text
        cookies_data = json.loads(cookies_text)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º cookies
        result = process_cookies_data(update.effective_user.id, cookies_data)
        
        if result['success']:
            update.message.reply_text(
                f"‚úÖ **Cookies —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!**\n\n"
                f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result['processed']} cookies\n"
                f"‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç–æ–≤: {result['accounts']} –Ω–∞–π–¥–µ–Ω–æ\n\n"
                f"üéØ Cookies –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!",
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ cookies:**\n\n{result['error']}",
                parse_mode='Markdown'
            )
        
    except json.JSONDecodeError:
        update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ cookies: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
    
    return ConversationHandler.END

def process_cookies_data(user_id: int, cookies_data: list) -> dict:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö cookies"""
    try:
        processed_count = 0
        accounts_found = 0
        
        # –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ cookies
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
        processed_count = len(cookies_data) if isinstance(cookies_data, list) else 0
        accounts_found = 1 if processed_count > 0 else 0
        
        return {
            'success': True,
            'processed': processed_count,
            'accounts': accounts_found
        }
        
    except Exception as e:
        return {
            'success': False,
            'error': str(e)
        }

def cookies_export(update: Update, context: CallbackContext):
    """–≠–∫—Å–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö cookies"""
    query = update.callback_query
    user_id = update.effective_user.id
    
    try:
        # –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ cookies
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
        text = """üì§ **–≠–ö–°–ü–û–†–¢ COOKIES**

üîç **–ü–æ–∏—Å–∫ cookies...**

‚ùå Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ cookies
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Instagram"""
        
        query.edit_message_text(
            text,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="cookies_menu")
            ]]),
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ cookies: {e}")
        query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ cookies.")

def cancel_cookies(update: Update, context: CallbackContext):
    """–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å cookies"""
    update.message.reply_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
        reply_markup=get_accounts_menu_keyboard()
    )
    return ConversationHandler.END

# –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è cookies
cookies_conversation = ConversationHandler(
    entry_points=[],
    states={
        COOKIES_FILE: [MessageHandler(Filters.document, process_cookies_file)],
        COOKIES_TEXT: [MessageHandler(Filters.text & ~Filters.command, process_cookies_text)]
    },
    fallbacks=[CommandHandler('cancel', cancel_cookies)]
)