#!/usr/bin/env python3
"""
üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–¢–ê–í–®–ò–•–°–Ø –í–´–ó–û–í–û–í get_instagram_account()
–ó–∞–º–µ–Ω—è–µ—Ç get_instagram_account(account_id) –Ω–∞ get_instagram_account(account_id, context=context, user_id=user_id)
"""

import os
import re
import shutil
from datetime import datetime

# –§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
FILES_TO_FIX = [
    "./telegram_bot/bot.py",
    "./telegram_bot/handlers.py", 
    "./telegram_bot/enhanced_handlers.py"
]

def fix_get_instagram_account_calls(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—ã–∑–æ–≤—ã get_instagram_account() –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        changes_made = 0
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç safe_user_wrapper –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if "from database.safe_user_wrapper import" not in content:
            # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–º–ø–æ—Ä—Ç get_instagram_account
            import_pattern = r'from database\.db_manager import.*get_instagram_account.*'
            import_match = re.search(import_pattern, content)
            
            if import_match:
                # –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç –∏–∑ db_manager –Ω–∞ safe_user_wrapper
                old_import = import_match.group(0)
                # –£–±–∏—Ä–∞–µ–º get_instagram_account –∏–∑ db_manager –∏–º–ø–æ—Ä—Ç–∞
                new_db_import = re.sub(r',?\s*get_instagram_account,?', '', old_import)
                new_db_import = re.sub(r'\(\s*,', '(', new_db_import)  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∑–∞–ø—è—Ç—ã–µ
                new_db_import = re.sub(r',\s*\)', ')', new_db_import)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –∏–∑ safe_user_wrapper
                content = content.replace(old_import, 
                    new_db_import + "\n" +
                    "from database.safe_user_wrapper import get_user_instagram_account as get_instagram_account, extract_user_id_from_update"
                )
                changes_made += 1
                print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –≤ {file_path}")
        
        # 2. –ó–∞–º–µ–Ω—è–µ–º –≤—ã–∑–æ–≤—ã get_instagram_account(account_id) –Ω–∞ –≤–µ—Ä—Å–∏—é —Å user_id
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π —Å get_instagram_account –≤—ã–∑–æ–≤–∞–º–∏
        function_pattern = r'def\s+(\w+)\s*\([^)]*\):[^}]*?get_instagram_account\([^)]*\)'
        
        for func_match in re.finditer(function_pattern, content, re.DOTALL):
            func_content = func_match.group(0)
            func_name = func_match.group(1)
            
            # –ò—â–µ–º get_instagram_account(account_id) –≤ —Ñ—É–Ω–∫—Ü–∏–∏
            account_calls = re.findall(r'get_instagram_account\(([^)]+)\)', func_content)
            
            if account_calls:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–∏
                func_start = func_match.start()
                func_def = func_match.group(0).split(':')[0]
                
                has_update = 'update' in func_def
                has_context = 'context' in func_def
                
                if has_update or has_context:
                    # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ—Å—Ç—ã–µ –≤—ã–∑–æ–≤—ã –Ω–∞ –≤–µ—Ä—Å–∏—é —Å user_id
                    for call in account_calls:
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å context= –∏–ª–∏ user_id=
                        if 'context=' in call or 'user_id=' in call:
                            continue
                            
                        old_call = f"get_instagram_account({call})"
                        
                        if has_update and has_context:
                            new_call = f"get_instagram_account({call}, context=context, user_id=update.effective_user.id)"
                        elif has_context:
                            new_call = f"get_instagram_account({call}, context=context)"
                        else:
                            new_call = f"get_instagram_account({call})"  # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                        
                        if old_call != new_call:
                            content = content.replace(old_call, new_call)
                            changes_made += 1
                            print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {func_name}: {old_call} ‚Üí {new_call}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if changes_made > 0:
            # –°–æ–∑–¥–∞–µ–º backup
            backup_path = f"{file_path}.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
            shutil.copy2(file_path, backup_path)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
                
            print(f"‚úÖ {file_path}: {changes_made} –∏–∑–º–µ–Ω–µ–Ω–∏–π (backup: {backup_path})")
            return True
        else:
            print(f"‚ö™ {file_path}: –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {file_path}: {e}")
        return False

def main():
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–¢–ê–í–®–ò–•–°–Ø –í–´–ó–û–í–û–í get_instagram_account()")
    print("=" * 60)
    
    fixed_files = 0
    total_files = len(FILES_TO_FIX)
    
    for file_path in FILES_TO_FIX:
        if os.path.exists(file_path):
            print(f"\nüîß –û–±—Ä–∞–±–æ—Ç–∫–∞: {file_path}")
            if fix_get_instagram_account_calls(file_path):
                fixed_files += 1
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    print("\n" + "=" * 60)
    print(f"üéâ –ó–ê–í–ï–†–®–ï–ù–û: {fixed_files}/{total_files} —Ñ–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
    print("‚úÖ –í—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ –≤—ã–∑–æ–≤—ã get_instagram_account() –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    main() 