#!/usr/bin/env python3
"""
–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–û–õ–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç
"""

import sys
import os
import json

sys.path.insert(0, './utils')
sys.path.insert(0, './admin_bot')

def force_delete_user_completely(user_id: int):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–æ–≤—Å—é–¥—É"""
    
    print(f"üóëÔ∏è –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}")
    print("=" * 60)
    
    success_count = 0
    
    # 1. –£–¥–∞–ª—è–µ–º –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (UserService)
    try:
        from services.user_service import UserService
        user_service = UserService()
        
        if user_service.get_user(user_id):
            result = user_service.delete_user(user_id)
            if result:
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ UserService")
                success_count += 1
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ UserService")
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ UserService")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ UserService: {e}")
    
    # 2. –£–¥–∞–ª—è–µ–º –∏–∑ AccessManager
    try:
        from access_manager import get_access_manager
        
        access_manager = get_access_manager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤ –∫–µ—à–µ
        user_info = access_manager.get_user_info(user_id)
        if user_info:
            # –£–¥–∞–ª—è–µ–º –∏–∑ –∫–µ—à–∞ –Ω–∞–ø—Ä—è–º—É—é
            user_key = str(user_id)
            if user_key in access_manager._access_cache:
                del access_manager._access_cache[user_key]
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ –∫–µ—à–∞ AccessManager")
                success_count += 1
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ AccessManager")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ AccessManager: {e}")
    
    # 3. –£–¥–∞–ª—è–µ–º –∏–∑ —Ñ–∞–π–ª–∞ –æ–±—â–µ–≥–æ –∫–µ—à–∞
    try:
        cache_file = "data/shared_access_cache.json"
        if os.path.exists(cache_file):
            with open(cache_file, 'r', encoding='utf-8') as f:
                cache_data = json.load(f)
                
            cache = cache_data.get('cache', {})
            user_key = str(user_id)
            
            if user_key in cache:
                del cache[user_key]
                cache_data['cache'] = cache
                cache_data['last_update'] = time.time()
                
                with open(cache_file, 'w', encoding='utf-8') as f:
                    json.dump(cache_data, f, ensure_ascii=False, indent=2, default=str)
                    
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ –æ–±—â–µ–≥–æ –∫–µ—à–∞")
                success_count += 1
            else:
                print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞")
        else:
            print(f"‚ÑπÔ∏è –§–∞–π–ª –æ–±—â–µ–≥–æ –∫–µ—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞ –∫–µ—à–∞: {e}")
    
    # 4. –£–¥–∞–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user_data_dir = f"data/users/{user_id}"
        if os.path.exists(user_data_dir):
            import shutil
            shutil.rmtree(user_data_dir)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
            success_count += 1
        else:
            print(f"‚ÑπÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {e}")
    
    # 5. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    try:
        from access_manager import get_access_manager
        access_manager = get_access_manager()
        access_manager.force_sync()
        print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è")
        success_count += 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    
    print(f"\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count} –æ–ø–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
    
    if success_count >= 3:
        print("üéâ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù!")
        return True
    else:
        print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º")
        return False

def verify_user_deleted(user_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω"""
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}")
    print("=" * 60)
    
    found_anywhere = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º UserService
    try:
        from services.user_service import UserService
        user_service = UserService()
        user = user_service.get_user(user_id)
        if user:
            print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ UserService: {user.username}, —Å—Ç–∞—Ç—É—Å: {user.status}")
            found_anywhere = True
        else:
            print(f"‚úÖ –ù–ï–¢ –≤ UserService")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ UserService: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º AccessManager
    try:
        from access_manager import has_access, get_access_manager
        
        access_result = has_access(user_id)
        print(f"üìä has_access({user_id}): {access_result}")
        
        if access_result:
            found_anywhere = True
            
        access_manager = get_access_manager()
        user_info = access_manager.get_user_info(user_id)
        if user_info:
            print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ AccessManager: {user_info}")
            found_anywhere = True
        else:
            print(f"‚úÖ –ù–ï–¢ –≤ AccessManager")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ AccessManager: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –∫–µ—à–∞
    try:
        cache_file = "data/shared_access_cache.json"
        if os.path.exists(cache_file):
            with open(cache_file, 'r', encoding='utf-8') as f:
                cache_data = json.load(f)
                
            cache = cache_data.get('cache', {})
            user_key = str(user_id)
            
            if user_key in cache:
                print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞: {cache[user_key]}")
                found_anywhere = True
            else:
                print(f"‚úÖ –ù–ï–¢ –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞")
        else:
            print(f"‚ÑπÔ∏è –§–∞–π–ª –∫–µ—à–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞ –∫–µ—à–∞: {e}")
    
    if not found_anywhere:
        print(f"\nüéâ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user_id} –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù!")
        return True
    else:
        print(f"\n‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user_id} –ù–ê–ô–î–ï–ù –í –°–ò–°–¢–ï–ú–ï!")
        return False

def main():
    import time
    
    print("üßπ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 80)
    
    user_id = 6626270112
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø:")
    verify_user_deleted(user_id)
    
    # 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    print("\n2Ô∏è‚É£ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï:")
    success = force_delete_user_completely(user_id)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
    is_deleted = verify_user_deleted(user_id)
    
    if is_deleted:
        print(f"\n‚úÖ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∑–∞–Ω–æ–≤–æ")
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω")

if __name__ == "__main__":
    import time
    main() 
"""
–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–û–õ–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç
"""

import sys
import os
import json

sys.path.insert(0, './utils')
sys.path.insert(0, './admin_bot')

def force_delete_user_completely(user_id: int):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–æ–≤—Å—é–¥—É"""
    
    print(f"üóëÔ∏è –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}")
    print("=" * 60)
    
    success_count = 0
    
    # 1. –£–¥–∞–ª—è–µ–º –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (UserService)
    try:
        from services.user_service import UserService
        user_service = UserService()
        
        if user_service.get_user(user_id):
            result = user_service.delete_user(user_id)
            if result:
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ UserService")
                success_count += 1
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ UserService")
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ UserService")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ UserService: {e}")
    
    # 2. –£–¥–∞–ª—è–µ–º –∏–∑ AccessManager
    try:
        from access_manager import get_access_manager
        
        access_manager = get_access_manager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤ –∫–µ—à–µ
        user_info = access_manager.get_user_info(user_id)
        if user_info:
            # –£–¥–∞–ª—è–µ–º –∏–∑ –∫–µ—à–∞ –Ω–∞–ø—Ä—è–º—É—é
            user_key = str(user_id)
            if user_key in access_manager._access_cache:
                del access_manager._access_cache[user_key]
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ –∫–µ—à–∞ AccessManager")
                success_count += 1
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ AccessManager")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ AccessManager: {e}")
    
    # 3. –£–¥–∞–ª—è–µ–º –∏–∑ —Ñ–∞–π–ª–∞ –æ–±—â–µ–≥–æ –∫–µ—à–∞
    try:
        cache_file = "data/shared_access_cache.json"
        if os.path.exists(cache_file):
            with open(cache_file, 'r', encoding='utf-8') as f:
                cache_data = json.load(f)
                
            cache = cache_data.get('cache', {})
            user_key = str(user_id)
            
            if user_key in cache:
                del cache[user_key]
                cache_data['cache'] = cache
                cache_data['last_update'] = time.time()
                
                with open(cache_file, 'w', encoding='utf-8') as f:
                    json.dump(cache_data, f, ensure_ascii=False, indent=2, default=str)
                    
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ –æ–±—â–µ–≥–æ –∫–µ—à–∞")
                success_count += 1
            else:
                print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞")
        else:
            print(f"‚ÑπÔ∏è –§–∞–π–ª –æ–±—â–µ–≥–æ –∫–µ—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞ –∫–µ—à–∞: {e}")
    
    # 4. –£–¥–∞–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user_data_dir = f"data/users/{user_id}"
        if os.path.exists(user_data_dir):
            import shutil
            shutil.rmtree(user_data_dir)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
            success_count += 1
        else:
            print(f"‚ÑπÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {e}")
    
    # 5. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    try:
        from access_manager import get_access_manager
        access_manager = get_access_manager()
        access_manager.force_sync()
        print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è")
        success_count += 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    
    print(f"\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count} –æ–ø–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
    
    if success_count >= 3:
        print("üéâ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù!")
        return True
    else:
        print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º")
        return False

def verify_user_deleted(user_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω"""
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}")
    print("=" * 60)
    
    found_anywhere = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º UserService
    try:
        from services.user_service import UserService
        user_service = UserService()
        user = user_service.get_user(user_id)
        if user:
            print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ UserService: {user.username}, —Å—Ç–∞—Ç—É—Å: {user.status}")
            found_anywhere = True
        else:
            print(f"‚úÖ –ù–ï–¢ –≤ UserService")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ UserService: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º AccessManager
    try:
        from access_manager import has_access, get_access_manager
        
        access_result = has_access(user_id)
        print(f"üìä has_access({user_id}): {access_result}")
        
        if access_result:
            found_anywhere = True
            
        access_manager = get_access_manager()
        user_info = access_manager.get_user_info(user_id)
        if user_info:
            print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ AccessManager: {user_info}")
            found_anywhere = True
        else:
            print(f"‚úÖ –ù–ï–¢ –≤ AccessManager")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ AccessManager: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –∫–µ—à–∞
    try:
        cache_file = "data/shared_access_cache.json"
        if os.path.exists(cache_file):
            with open(cache_file, 'r', encoding='utf-8') as f:
                cache_data = json.load(f)
                
            cache = cache_data.get('cache', {})
            user_key = str(user_id)
            
            if user_key in cache:
                print(f"‚ùå –ù–ê–ô–î–ï–ù –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞: {cache[user_key]}")
                found_anywhere = True
            else:
                print(f"‚úÖ –ù–ï–¢ –≤ —Ñ–∞–π–ª–µ –∫–µ—à–∞")
        else:
            print(f"‚ÑπÔ∏è –§–∞–π–ª –∫–µ—à–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞ –∫–µ—à–∞: {e}")
    
    if not found_anywhere:
        print(f"\nüéâ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user_id} –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù!")
        return True
    else:
        print(f"\n‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user_id} –ù–ê–ô–î–ï–ù –í –°–ò–°–¢–ï–ú–ï!")
        return False

def main():
    import time
    
    print("üßπ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 80)
    
    user_id = 6626270112
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø:")
    verify_user_deleted(user_id)
    
    # 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    print("\n2Ô∏è‚É£ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï:")
    success = force_delete_user_completely(user_id)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
    is_deleted = verify_user_deleted(user_id)
    
    if is_deleted:
        print(f"\n‚úÖ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∑–∞–Ω–æ–≤–æ")
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω")

if __name__ == "__main__":
    import time
    main() 