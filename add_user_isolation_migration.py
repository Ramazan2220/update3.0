#!/usr/bin/env python3
"""
üîí –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ user_id –≤ —Ç–∞–±–ª–∏—Ü—É instagram_accounts
"""

import sqlite3
import logging
import os
from datetime import datetime

logger = logging.getLogger(__name__)

def migrate_add_user_isolation():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ user_id –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    db_path = "data/database.sqlite"
    
    if not os.path.exists(db_path):
        logger.error(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç–æ–ª–±–µ—Ü user_id
        cursor.execute("PRAGMA table_info(instagram_accounts)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'user_id' in columns:
            logger.info("‚úÖ –°—Ç–æ–ª–±–µ—Ü user_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return True
        
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è user_id...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü user_id
        cursor.execute("""
            ALTER TABLE instagram_accounts 
            ADD COLUMN user_id INTEGER DEFAULT 0 NOT NULL
        """)
        
        # –°–æ–∑–¥–∞—ë–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        cursor.execute("""
            CREATE INDEX IF NOT EXISTS idx_instagram_accounts_user_id 
            ON instagram_accounts(user_id)
        """)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        cursor.execute("SELECT COUNT(*) FROM instagram_accounts")
        total_accounts = cursor.fetchone()[0]
        
        if total_accounts > 0:
            logger.warning(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {total_accounts} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ë–ï–ó –∏–∑–æ–ª—è—Ü–∏–∏!")
            logger.warning("üö® –ö–†–ò–¢–ò–ß–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã –±—É–¥—É—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω—ã user_id=0")
            logger.warning("üìã –î–ï–ô–°–¢–í–ò–ï –¢–†–ï–ë–£–ï–¢–°–Ø: –í—Ä—É—á–Ω—É—é –Ω–∞–∑–Ω–∞—á—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ user_id –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            cursor.execute("""
                SELECT id, username, email, created_at 
                FROM instagram_accounts 
                ORDER BY created_at
            """)
            existing_accounts = cursor.fetchall()
            
            backup_file = f"data/accounts_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
            with open(backup_file, 'w', encoding='utf-8') as f:
                f.write("# –ë—ç–∫–∞–ø –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Instagram –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π –∏–∑–æ–ª—è—Ü–∏–∏\n")
                f.write(f"# –î–∞—Ç–∞: {datetime.now()}\n")
                f.write("# –§–æ—Ä–º–∞—Ç: ID | Username | Email | Created_At\n\n")
                
                for account in existing_accounts:
                    f.write(f"{account[0]} | {account[1]} | {account[2] or 'N/A'} | {account[3]}\n")
            
            logger.info(f"üíæ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {backup_file}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("üîí –¢–µ–ø–µ—Ä—å –≤—Å–µ –Ω–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –±—É–¥—É—Ç –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if conn:
            conn.rollback()
            conn.close()
        return False

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s'
    )
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    success = migrate_add_user_isolation()
    
    if success:
        logger.info("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n" + "="*60)
        print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ò–ó–û–õ–Ø–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ó–ê–í–ï–†–®–ï–ù–ê")
        print("="*60)
        print("üîí –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ user_id –≤ —Ç–∞–±–ª–∏—Ü—É instagram_accounts")
        print("üìä –°–æ–∑–¥–∞–Ω –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        print("üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
        print("1. –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã user_id=0")
        print("2. –í—Ä—É—á–Ω—É—é –Ω–∞–∑–Ω–∞—á—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ user_id –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print("3. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ user_id")
        print("="*60)
    else:
        logger.error("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!")
        print("\n‚ùå –û–®–ò–ë–ö–ê –ú–ò–ì–†–ê–¶–ò–ò!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.") 