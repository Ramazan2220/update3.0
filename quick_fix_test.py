#!/usr/bin/env python3
"""
–ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)
sys.path.insert(0, os.path.join(current_dir, 'utils'))
sys.path.insert(0, os.path.join(current_dir, 'admin_bot'))

def test_direct_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –ò–ú–ü–û–†–¢–ê")
    print("=" * 60)
    
    user_id = 6626270112
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞
        from multiprocessing_access_sync import has_access_mp, add_user_mp, remove_user_mp
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print(f"\n1Ô∏è‚É£ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        initial = has_access_mp(user_id)
        print(f"   has_access({user_id}): {initial}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        user_data = {
            'telegram_id': user_id,
            'is_active': True,
            'subscription_end': '2025-09-01T00:00:00',
            'role': 'trial'
        }
        add_result = add_user_mp(user_id, user_data)
        print(f"   add_user({user_id}): {add_result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
        after_add = has_access_mp(user_id)
        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add}")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n3Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        remove_result = remove_user_mp(user_id)
        print(f"   remove_user({user_id}): {remove_result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
        after_remove = has_access_mp(user_id)
        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove}")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if not initial and after_add and not after_remove:
            print(f"   üéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!")
            return True
        else:
            print(f"   ‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
            print(f"     –ù–∞—á–∞–ª—å–Ω–æ–µ: {initial} (–æ–∂–∏–¥–∞–ª–∏ False)")
            print(f"     –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add} (–æ–∂–∏–¥–∞–ª–∏ True)")
            print(f"     –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove} (–æ–∂–∏–¥–∞–ª–∏ False)")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_existing_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ access_manager"""
    print(f"\nüîß –¢–ï–°–¢ –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 60)
    
    user_id = 6626270112
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ access_manager –Ω–∞–ø—Ä—è–º—É—é
        import access_manager
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è has_access —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(access_manager, 'has_access'):
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è has_access –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            if hasattr(access_manager, 'USE_NEW_SYNC'):
                print("‚úÖ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º
                initial = access_manager.has_access(user_id)
                print(f"   has_access({user_id}): {initial}")
                
                if hasattr(access_manager, 'add_user_access'):
                    add_result = access_manager.add_user_access(user_id)
                    print(f"   add_user_access({user_id}): {add_result}")
                    
                    after_add = access_manager.has_access(user_id)
                    print(f"   has_access({user_id}) –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add}")
                    
                    if hasattr(access_manager, 'delete_user_completely'):
                        remove_result = access_manager.delete_user_completely(user_id)
                        print(f"   delete_user_completely({user_id}): {remove_result}")
                        
                        after_remove = access_manager.has_access(user_id)
                        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove}")
                        
                        if not initial and after_add and not after_remove:
                            print(f"üéâ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!")
                            return True
                        else:
                            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π")
                            return False
                    else:
                        print(f"‚ùå –§—É–Ω–∫—Ü–∏—è delete_user_completely –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                        return False
                else:
                    print(f"‚ùå –§—É–Ω–∫—Ü–∏—è add_user_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
            else:
                print(f"‚ö†Ô∏è –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ù–ï –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
                return False
        else:
            print(f"‚ùå –§—É–Ω–∫—Ü–∏—è has_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ access_manager: {e}")
        return False

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    direct_test = test_direct_import()
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    integrated_test = test_existing_functions()
    
    print(f"\nüèÜ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 80)
    print(f"   –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: {'‚úÖ' if direct_test else '‚ùå'}")
    print(f"   –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: {'‚úÖ' if integrated_test else '‚ùå'}")
    
    if direct_test:
        print(f"\nüéâ –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê MULTIPROCESSING –†–ê–ë–û–¢–ê–ï–¢!")
        if integrated_test:
            print(f"üî• –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–û–ñ–ï –†–ê–ë–û–¢–ê–ï–¢!")
            print(f"üöÄ –ú–û–ñ–ù–û –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–¢–¨ –ë–û–¢–´!")
        else:
            print(f"‚ö†Ô∏è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            print(f"üí° –ù–æ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print(f"\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ù–û–í–û–ô –°–ò–°–¢–ï–ú–û–ô")
    
    print(f"\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:")
    if direct_test and integrated_test:
        print(f"1Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç: python admin_bot/main.py")
        print(f"2Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: python main.py")
        print(f"3Ô∏è‚É£ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö")
    elif direct_test:
        print(f"1Ô∏è‚É£ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
        print(f"2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ multiprocessing_access_sync")
        print(f"3Ô∏è‚É£ –ò–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")
    else:
        print(f"1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É multiprocessing")
        print(f"2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É –∏–∑ backup_old_sync/")

if __name__ == "__main__":
    main() 
"""
–ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)
sys.path.insert(0, os.path.join(current_dir, 'utils'))
sys.path.insert(0, os.path.join(current_dir, 'admin_bot'))

def test_direct_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –ò–ú–ü–û–†–¢–ê")
    print("=" * 60)
    
    user_id = 6626270112
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞
        from multiprocessing_access_sync import has_access_mp, add_user_mp, remove_user_mp
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print(f"\n1Ô∏è‚É£ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        initial = has_access_mp(user_id)
        print(f"   has_access({user_id}): {initial}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        user_data = {
            'telegram_id': user_id,
            'is_active': True,
            'subscription_end': '2025-09-01T00:00:00',
            'role': 'trial'
        }
        add_result = add_user_mp(user_id, user_data)
        print(f"   add_user({user_id}): {add_result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
        after_add = has_access_mp(user_id)
        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add}")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n3Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        remove_result = remove_user_mp(user_id)
        print(f"   remove_user({user_id}): {remove_result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
        after_remove = has_access_mp(user_id)
        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove}")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if not initial and after_add and not after_remove:
            print(f"   üéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!")
            return True
        else:
            print(f"   ‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
            print(f"     –ù–∞—á–∞–ª—å–Ω–æ–µ: {initial} (–æ–∂–∏–¥–∞–ª–∏ False)")
            print(f"     –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add} (–æ–∂–∏–¥–∞–ª–∏ True)")
            print(f"     –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove} (–æ–∂–∏–¥–∞–ª–∏ False)")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_existing_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ access_manager"""
    print(f"\nüîß –¢–ï–°–¢ –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 60)
    
    user_id = 6626270112
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ access_manager –Ω–∞–ø—Ä—è–º—É—é
        import access_manager
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è has_access —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(access_manager, 'has_access'):
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è has_access –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            if hasattr(access_manager, 'USE_NEW_SYNC'):
                print("‚úÖ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º
                initial = access_manager.has_access(user_id)
                print(f"   has_access({user_id}): {initial}")
                
                if hasattr(access_manager, 'add_user_access'):
                    add_result = access_manager.add_user_access(user_id)
                    print(f"   add_user_access({user_id}): {add_result}")
                    
                    after_add = access_manager.has_access(user_id)
                    print(f"   has_access({user_id}) –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {after_add}")
                    
                    if hasattr(access_manager, 'delete_user_completely'):
                        remove_result = access_manager.delete_user_completely(user_id)
                        print(f"   delete_user_completely({user_id}): {remove_result}")
                        
                        after_remove = access_manager.has_access(user_id)
                        print(f"   has_access({user_id}) –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {after_remove}")
                        
                        if not initial and after_add and not after_remove:
                            print(f"üéâ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!")
                            return True
                        else:
                            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π")
                            return False
                    else:
                        print(f"‚ùå –§—É–Ω–∫—Ü–∏—è delete_user_completely –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                        return False
                else:
                    print(f"‚ùå –§—É–Ω–∫—Ü–∏—è add_user_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
            else:
                print(f"‚ö†Ô∏è –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ù–ï –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
                return False
        else:
            print(f"‚ùå –§—É–Ω–∫—Ü–∏—è has_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ access_manager: {e}")
        return False

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    direct_test = test_direct_import()
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    integrated_test = test_existing_functions()
    
    print(f"\nüèÜ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 80)
    print(f"   –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: {'‚úÖ' if direct_test else '‚ùå'}")
    print(f"   –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: {'‚úÖ' if integrated_test else '‚ùå'}")
    
    if direct_test:
        print(f"\nüéâ –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê MULTIPROCESSING –†–ê–ë–û–¢–ê–ï–¢!")
        if integrated_test:
            print(f"üî• –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–û–ñ–ï –†–ê–ë–û–¢–ê–ï–¢!")
            print(f"üöÄ –ú–û–ñ–ù–û –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–¢–¨ –ë–û–¢–´!")
        else:
            print(f"‚ö†Ô∏è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            print(f"üí° –ù–æ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print(f"\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ù–û–í–û–ô –°–ò–°–¢–ï–ú–û–ô")
    
    print(f"\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:")
    if direct_test and integrated_test:
        print(f"1Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω –±–æ—Ç: python admin_bot/main.py")
        print(f"2Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: python main.py")
        print(f"3Ô∏è‚É£ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö")
    elif direct_test:
        print(f"1Ô∏è‚É£ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
        print(f"2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ multiprocessing_access_sync")
        print(f"3Ô∏è‚É£ –ò–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")
    else:
        print(f"1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É multiprocessing")
        print(f"2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É –∏–∑ backup_old_sync/")

if __name__ == "__main__":
    main() 