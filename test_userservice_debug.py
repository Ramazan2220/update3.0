#!/usr/bin/env python3
"""
–û–¢–õ–ê–î–ö–ê USERSERVICE
"""

import sys
import os
import json

sys.path.insert(0, './utils')
sys.path.insert(0, './admin_bot')

def test_userservice():
    print("üîç –û–¢–õ–ê–î–ö–ê USERSERVICE")
    print("=" * 80)
    
    user_id = 6626270112
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º UserService –Ω–∞–ø—Ä—è–º—É—é
        print("\n1Ô∏è‚É£ USERSERVICE –í –ü–ê–ú–Ø–¢–ò:")
        from services.user_service import UserService
        user_service = UserService()
        
        user = user_service.get_user(user_id)
        if user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–º—è—Ç–∏ UserService:")
            print(f"   Username: {user.username}")
            print(f"   Status: {user.status}")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–º—è—Ç–∏ UserService")
        
        all_users = user_service.get_all_users()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ UserService: {len(all_users)}")
        user_ids = [u.telegram_id for u in all_users]
        print(f"üìÑ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_ids}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
        print(f"\n2Ô∏è‚É£ –§–ê–ô–õ admin_bot/data/users.json:")
        userservice_file = "admin_bot/data/users.json"
        if os.path.exists(userservice_file):
            with open(userservice_file, 'r', encoding='utf-8') as f:
                file_data = json.load(f)
                
            user_key = str(user_id)
            if user_key in file_data:
                user_data = file_data[user_key]
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ:")
                print(f"   Username: {user_data.get('username', 'N/A')}")
                print(f"   Status: {user_data.get('status', 'N/A')}")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ")
                
            print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª–µ: {len(file_data)}")
            print(f"üìÑ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª–µ: {list(file_data.keys())}")
        else:
            print(f"‚ùå –§–∞–π–ª {userservice_file} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        print(f"\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–£–ï–ú –£–î–ê–õ–ï–ù–ò–ï:")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not user:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            user = user_service.create_user(user_id, "test_user")
            user_service.update_user(user)
            user_service.save_users()
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–Ω –µ—Å—Ç—å
        user = user_service.get_user(user_id)
        print(f"üìä –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {'–Ω–∞–π–¥–µ–Ω' if user else '–ù–ï –Ω–∞–π–¥–µ–Ω'}")
        
        # –£–¥–∞–ª—è–µ–º
        print("üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        result = user_service.delete_user(user_id)
        print(f"üìä delete_user() –≤–µ—Ä–Ω—É–ª: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ø–∞–º—è—Ç–∏
        user = user_service.get_user(user_id)
        print(f"üìä –í –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {'–Ω–∞–π–¥–µ–Ω' if user else '–ù–ï –Ω–∞–π–¥–µ–Ω'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ñ–∞–π–ª–µ
        with open(userservice_file, 'r', encoding='utf-8') as f:
            file_data = json.load(f)
        user_key = str(user_id)
        in_file = user_key in file_data
        print(f"üìä –í —Ñ–∞–π–ª–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {'–Ω–∞–π–¥–µ–Ω' if in_file else '–ù–ï –Ω–∞–π–¥–µ–Ω'}")
        
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º UserService
        print(f"\n4Ô∏è‚É£ –ü–ï–†–ï–°–û–ó–î–ê–ï–ú USERSERVICE:")
        new_user_service = UserService()
        user = new_user_service.get_user(user_id)
        print(f"üìä –í –Ω–æ–≤–æ–º UserService: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {'–Ω–∞–π–¥–µ–Ω' if user else '–ù–ï –Ω–∞–π–¥–µ–Ω'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def main():
    test_userservice()

if __name__ == "__main__":
    main() 