#!/usr/bin/env python3
"""
üî¥ LIVE –¢–ï–°–¢ –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –º–µ–∂–¥—É —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""

import time
import logging
from database.db_manager import get_instagram_accounts, add_instagram_account_for_user
from utils.access_manager import has_access

logger = logging.getLogger(__name__)

def test_live_user_isolation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –º–µ–∂–¥—É —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üî¥ LIVE –¢–ï–°–¢ –ò–ó–û–õ–Ø–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("="*60)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    user1_id = 6499246016  # ysim0r 
    user2_id = 6626270112  # lock0125
    
    print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    print(f"   User 1: {user1_id} (ysim0r)")
    print(f"   User 2: {user2_id} (lock0125)")
    print()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ —Å–∏—Å—Ç–µ–º–µ
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –ö –°–ò–°–¢–ï–ú–ï:")
    
    user1_access = has_access(user1_id)
    user2_access = has_access(user2_id)
    
    print(f"üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user1_id}: {'‚úÖ –î–æ—Å—Ç—É–ø –µ—Å—Ç—å' if user1_access else '‚ùå –î–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç'}")
    print(f"üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user2_id}: {'‚úÖ –î–æ—Å—Ç—É–ø –µ—Å—Ç—å' if user2_access else '‚ùå –î–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç'}")
    print()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–ª—è—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Instagram
    print("2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–ó–û–õ–Ø–¶–ò–ò INSTAGRAM –ê–ö–ö–ê–£–ù–¢–û–í:")
    
    user1_accounts = get_instagram_accounts(user_id=user1_id)
    user2_accounts = get_instagram_accounts(user_id=user2_id)
    all_legacy_accounts = get_instagram_accounts()  # –í—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã (–≤–∫–ª—é—á–∞—è —Å—Ç–∞—Ä—ã–µ)
    
    print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–ö–ö–ê–£–ù–¢–û–í:")
    print(f"   üë§ User {user1_id}: {len(user1_accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print(f"   üë§ User {user2_id}: {len(user2_accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print(f"   üåç –í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_legacy_accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print()
    
    # 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("3Ô∏è‚É£ –î–ï–¢–ê–õ–ò –ê–ö–ö–ê–£–ù–¢–û–í –ü–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú:")
    
    print(f"üîí –ê–ö–ö–ê–£–ù–¢–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user1_id}:")
    if user1_accounts:
        for i, account in enumerate(user1_accounts, 1):
            print(f"   {i}. {account.username} (ID: {account.id}, user_id: {account.user_id})")
    else:
        print("   üì≠ –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    print(f"\nüîí –ê–ö–ö–ê–£–ù–¢–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user2_id}:")
    if user2_accounts:
        for i, account in enumerate(user2_accounts, 1):
            print(f"   {i}. {account.username} (ID: {account.id}, user_id: {account.user_id})")
    else:
        print("   üì≠ –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã (user_id=0)
    legacy_accounts = [acc for acc in all_legacy_accounts if acc.user_id == 0]
    print(f"4Ô∏è‚É£ –°–¢–ê–†–´–ï –ê–ö–ö–ê–£–ù–¢–´ –ë–ï–ó –ò–ó–û–õ–Ø–¶–ò–ò (user_id=0): {len(legacy_accounts)}")
    if legacy_accounts:
        print("‚ö†Ô∏è –≠—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞:")
        for i, account in enumerate(legacy_accounts[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"   {i}. {account.username} (ID: {account.id})")
        if len(legacy_accounts) > 5:
            print(f"   ... –∏ –µ—â—ë {len(legacy_accounts) - 5} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print()
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    print("5Ô∏è‚É£ –¢–ï–°–¢ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê:")
    
    timestamp = int(time.time())
    test_username = f"isolation_test_{user1_id}_{timestamp}"
    
    new_account = add_instagram_account_for_user(
        user_id=user1_id,
        username=test_username,
        password="test_password_123",
        email=f"test_{timestamp}@example.com"
    )
    
    if new_account:
        print(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {test_username} –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user1_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ –ù–ï –≤–∏–¥–∏—Ç
        user1_after = get_instagram_accounts(user_id=user1_id)
        user2_after = get_instagram_accounts(user_id=user2_id)
        
        print(f"üìä –ü–û–°–õ–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø:")
        print(f"   üë§ User {user1_id}: {len(user1_after)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (+{len(user1_after) - len(user1_accounts)})")
        print(f"   üë§ User {user2_id}: {len(user2_after)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (–Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å)")
        
        if len(user2_after) == len(user2_accounts):
            print("‚úÖ –ò–ó–û–õ–Ø–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–µ –≤–∏–¥–∏—Ç –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1")
        else:
            print("‚ùå –û–®–ò–ë–ö–ê –ò–ó–û–õ–Ø–¶–ò–ò! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –≤–∏–¥–∏—Ç —á—É–∂–æ–π –∞–∫–∫–∞—É–Ω—Ç")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    
    print()
    
    # 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∏–∑–æ–ª—è—Ü–∏–∏
    print("6Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê –ò–ó–û–õ–Ø–¶–ò–ò:")
    
    user1_usernames = {acc.username for acc in get_instagram_accounts(user_id=user1_id)}
    user2_usernames = {acc.username for acc in get_instagram_accounts(user_id=user2_id)}
    
    intersection = user1_usernames & user2_usernames
    
    if intersection:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê! –û–±—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã: {intersection}")
        return False
    else:
        print("‚úÖ –ò–ó–û–õ–Ø–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢!")
        print("üîí –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∞–∫–∫–∞—É–Ω—Ç—ã")
        return True

def check_system_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    print("üìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
    print("-" * 40)
    
    try:
        all_accounts = get_instagram_accounts()
        isolated_accounts = [acc for acc in all_accounts if acc.user_id != 0]
        legacy_accounts = [acc for acc in all_accounts if acc.user_id == 0]
        
        print(f"üìà –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(all_accounts)}")
        print(f"üîí –° –∏–∑–æ–ª—è—Ü–∏–µ–π: {len(isolated_accounts)}")
        print(f"‚ö†Ô∏è –ë–µ–∑ –∏–∑–æ–ª—è—Ü–∏–∏ (legacy): {len(legacy_accounts)}")
        
        if legacy_accounts:
            print(f"üìã –ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–æ–ª—è—Ü–∏–∏: {(len(isolated_accounts)/len(all_accounts)*100):.1f}%")
        else:
            print("üéâ 100% –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        unique_users = set(acc.user_id for acc in isolated_accounts)
        print(f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(unique_users)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    print()

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s'
    )
    
    print("üöÄ –ó–ê–ü–£–°–ö LIVE –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–ó–û–õ–Ø–¶–ò–ò...")
    print()
    
    check_system_status()
    success = test_live_user_isolation()
    
    print("\n" + "="*60)
    if success:
        print("üéâ LIVE –¢–ï–°–¢ –ü–†–û–®–Å–õ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–∑–æ–ª—è—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞")
    else:
        print("üí• LIVE –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù!")
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–∑–æ–ª—è—Ü–∏–µ–π")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    print("="*60) 