#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞–º–∏
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)
sys.path.insert(0, os.path.join(current_dir, 'admin_bot'))
sys.path.insert(0, os.path.join(current_dir, 'utils'))

def test_access_system():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–æ–≤"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –î–û–°–¢–£–ü–û–í")
    print("=" * 60)
    
    test_user_id = 6626270112
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–û–†–¢–û–í:")
    try:
        # –ü—Ä—è–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        sys.path.insert(0, current_dir)
        import access_manager
        from access_manager import get_access_manager, has_access
        
        sys.path.insert(0, os.path.join(current_dir, 'admin_bot'))
        from services.user_service import UserService
        from models.user import User, UserStatus, SubscriptionPlan
        print("   ‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò:")
    try:
        user_service = UserService()
        user = user_service.get_user(test_user_id)
        if user:
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
            print(f"      ID: {user.telegram_id}")
            print(f"      Username: {user.username}")
            print(f"      –ü–ª–∞–Ω: {user.subscription_plan}")
            print(f"      –°—Ç–∞—Ç—É—Å: {user.status}")
            print(f"      –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
            print(f"      –û–∫–æ–Ω—á–∞–Ω–∏–µ: {user.subscription_end}")
        else:
            print(f"   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º AccessManager
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê ACCESS MANAGER:")
    try:
        access_manager = get_access_manager()
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        access_manager.force_sync()
        print("   ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º has_access
        has_access_result = access_manager.has_access(test_user_id)
        print(f"   üìä has_access({test_user_id}): {has_access_result}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = access_manager.get_user_info(test_user_id)
        if user_info:
            print("   üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:")
            for key, value in user_info.items():
                print(f"      {key}: {value}")
        else:
            print("   ‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ AccessManager: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é has_access –Ω–∞–ø—Ä—è–º—É—é
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ò has_access:")
    try:
        direct_access = has_access(test_user_id)
        print(f"   üìä has_access({test_user_id}) –Ω–∞–ø—Ä—è–º—É—é: {direct_access}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞: {e}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º config.py
    print("\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê CONFIG.PY:")
    try:
        import config
        admin_user_ids = getattr(config, 'ADMIN_USER_IDS', [])
        super_admin_user_ids = getattr(config, 'SUPER_ADMIN_USER_IDS', [])
        print(f"   üìä ADMIN_USER_IDS: {admin_user_ids}")
        print(f"   üìä SUPER_ADMIN_USER_IDS: {super_admin_user_ids}")
        print(f"   üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user_id} –≤ config.py: {test_user_id in admin_user_ids or test_user_id in super_admin_user_ids}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ config.py: {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
    print("\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–ï–®–ê:")
    try:
        access_manager = get_access_manager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–µ—à (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        if hasattr(access_manager, '_access_cache'):
            cache = access_manager._access_cache
            print(f"   üìä –†–∞–∑–º–µ—Ä –∫–µ—à–∞: {len(cache)}")
            user_key = str(test_user_id)
            if user_key in cache:
                print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ:")
                cache_data = cache[user_key]
                for key, value in cache_data.items():
                    print(f"      {key}: {value}")
            else:
                print(f"   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ")
                print("   üìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∫–µ—à–µ:")
                for key, data in cache.items():
                    print(f"      {key}: {data.get('is_active', 'N/A')}")
        else:
            print("   ‚ö†Ô∏è –ö–µ—à –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

def add_user_test():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\n\nüß™ –¢–ï–°–¢ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    test_user_id = 6626270112
    test_username = "lock0125"
    test_plan = "trial_3"
    
    try:
        from utils.access_manager import add_user_access
        
        print(f"–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user_id}, {test_username}, {test_plan}")
        success = add_user_access(test_user_id)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {success}")
        
        if success:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            from utils.access_manager import has_access
            result = has_access(test_user_id)
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}")

def remove_user_test():
    """–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\n\nüóëÔ∏è –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    test_user_id = 6626270112
    
    try:
        from utils.access_manager import delete_user_completely, has_access
        
        print(f"–£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user_id}")
        success = delete_user_completely(test_user_id)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è: {success}")
        
        if success:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = has_access(test_user_id)
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
    test_access_system()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ
    print("\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
    print("1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 6626270112")
    print("2. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 6626270112")
    print("3. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É")
    print("4. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
    
    if choice == "1":
        add_user_test()
        print("\nüîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        test_access_system()
    elif choice == "2":
        remove_user_test()
        print("\nüîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:")
        test_access_system()
    elif choice == "3":
        test_access_system()
    else:
        print("üëã –í—ã—Ö–æ–¥") 