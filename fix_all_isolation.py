#!/usr/bin/env python3
"""
üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ó–û–õ–Ø–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
–ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ –≤—ã–∑–æ–≤—ã get_instagram_accounts() –∏ get_instagram_account() 
–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ —Å user_id
"""

import os
import re
import shutil
from datetime import datetime

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ telegram_bot —Ñ–∞–π–ª—ã)
FILES_TO_FIX = [
    "./telegram_bot/handlers.py",
    "./telegram_bot/handlers/group_handlers.py", 
    "./telegram_bot/handlers/publish/posts/handlers.py",
    "./telegram_bot/handlers/publish/posts.py",
    "./telegram_bot/handlers/publish/reels/handlers.py",
    "./telegram_bot/handlers/publish/stories/handlers.py",
    "./telegram_bot/handlers/publish/common.py",
    "./telegram_bot/handlers/analytics_handlers.py",
    "./telegram_bot/handlers/publish_handlers.py",
]

def backup_file(filepath):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ñ–∞–π–ª–∞"""
    backup_path = f"{filepath}.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    shutil.copy2(filepath, backup_path)
    print(f"‚úÖ Backup: {backup_path}")
    return backup_path

def add_import_if_needed(content):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if "from database.safe_user_wrapper import" in content:
        return content
    
    # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–º–ø–æ—Ä—Ç db_manager
    db_import_pattern = r'from database\.db_manager import \([^)]+\)'
    match = re.search(db_import_pattern, content, re.DOTALL)
    
    if match:
        # –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç, —É–±–∏—Ä–∞—è get_instagram_accounts –∏ get_instagram_account
        old_import = match.group(0)
        new_import = old_import.replace(', get_instagram_accounts', '').replace('get_instagram_accounts, ', '').replace('get_instagram_accounts', '')
        new_import = new_import.replace(', get_instagram_account', '').replace('get_instagram_account, ', '').replace('get_instagram_account', '')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç
        safe_import = "\nfrom database.safe_user_wrapper import get_user_instagram_accounts as get_instagram_accounts, get_user_instagram_account as get_instagram_account, extract_user_id_from_update"
        
        content = content.replace(old_import, new_import + safe_import)
        print("üì¶ –î–æ–±–∞–≤–ª–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç")
    
    return content

def fix_function_calls(content):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π"""
    changes = 0
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    handler_pattern = r'def\s+(\w+)\s*\([^)]*update[^)]*context[^)]*\):'
    handlers = re.findall(handler_pattern, content)
    
    for handler_name in handlers:
        # –ò—â–µ–º –≤—ã–∑–æ–≤—ã get_instagram_accounts() –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        func_start = content.find(f"def {handler_name}")
        if func_start == -1:
            continue
            
        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ (—Å–ª–µ–¥—É—é—â–∏–π def –∏–ª–∏ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞)
        next_def = content.find("\ndef ", func_start + 1)
        func_end = next_def if next_def != -1 else len(content)
        
        func_content = content[func_start:func_end]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ user_id = extract_user_id_from_update
        if "user_id = extract_user_id_from_update" in func_content:
            continue
            
        # –ò—â–µ–º get_instagram_accounts() –≤ —Ñ—É–Ω–∫—Ü–∏–∏
        if "get_instagram_accounts()" in func_content:
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ user_id –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
            func_def_end = func_content.find('"""', func_content.find('"""') + 3)
            if func_def_end == -1:
                func_def_end = func_content.find('\n', func_content.find('):')) + 1
            else:
                func_def_end = func_content.find('\n', func_def_end) + 1
            
            user_id_code = "    user_id = extract_user_id_from_update(update, context)\n"
            new_func_content = func_content[:func_def_end] + user_id_code + func_content[func_def_end:]
            
            # –ó–∞–º–µ–Ω—è–µ–º get_instagram_accounts() –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            new_func_content = new_func_content.replace(
                "get_instagram_accounts()",
                "get_instagram_accounts(context=context, user_id=user_id)"
            )
            
            # –ó–∞–º–µ–Ω—è–µ–º get_instagram_account( –Ω–∞ –≤–µ—Ä—Å–∏—é —Å user_id
            new_func_content = re.sub(
                r'get_instagram_account\((\d+)\)',
                r'get_instagram_account(\1, context=context, user_id=user_id)',
                new_func_content
            )
            
            content = content.replace(func_content, new_func_content)
            changes += 1
            print(f"üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: {handler_name}")
    
    return content, changes

def fix_file(filepath):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª"""
    print(f"\nüîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {filepath}")
    
    if not os.path.exists(filepath):
        print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º backup
    backup_path = backup_file(filepath)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º
    original_content = content
    content = add_import_if_needed(content)
    content, changes = fix_function_calls(content)
    
    if content != original_content:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {changes} —Ñ—É–Ω–∫—Ü–∏–π –≤ {filepath}")
        return True
    else:
        print(f"‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ {filepath}")
        # –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–π backup
        os.remove(backup_path)
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ó–û–õ–Ø–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 60)
    
    fixed_files = 0
    total_files = len(FILES_TO_FIX)
    
    for filepath in FILES_TO_FIX:
        if fix_file(filepath):
            fixed_files += 1
    
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {fixed_files}/{total_files} —Ñ–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
    print("üéâ –ò–∑–æ–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    
    if fixed_files > 0:
        print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π!")

if __name__ == "__main__":
    main() 