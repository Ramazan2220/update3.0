#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –∞–¥–º–∏–Ω –±–æ—Ç–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_live_sync():
    print("üöÄ –¢–ï–°–¢ –ñ–ò–í–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 60)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    try:
        from utils.access_manager import has_access, add_user_access, remove_user_access
        print("‚úÖ –ò–º–ø–æ—Ä—Ç access_manager —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    test_user_id = 123456789
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    initial_access = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {initial_access}")
    
    print(f"\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    add_result = add_user_access(test_user_id)
    print(f"   add_user_access({test_user_id}): {add_result}")
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –ü–û–°–õ–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n3Ô∏è‚É£ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    time.sleep(2)
    
    print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
    access_after_add = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {access_after_add}")
    
    print(f"\n5Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    remove_result = remove_user_access(test_user_id)
    print(f"   remove_user_access({test_user_id}): {remove_result}")
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –ü–û–°–õ–ï –£–î–ê–õ–ï–ù–ò–Ø:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n6Ô∏è‚É£ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    time.sleep(2)
    
    print(f"\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:")
    access_after_remove = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {access_after_remove}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success = (
        initial_access == False and
        add_result == True and
        access_after_add == True and
        remove_result == True and
        access_after_remove == False
    )
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print("‚ùå –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ù–ï –ü–†–û–®–ï–õ!")
        print(f"   –î–µ—Ç–∞–ª–∏: initial={initial_access}, add={add_result}")
        print(f"           after_add={access_after_add}, remove={remove_result}")
        print(f"           after_remove={access_after_remove}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –ñ–ò–í–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    success = test_live_sync()
    
    if success:
        print("\n‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ Telegram –±–æ—Ç–µ!")
        exit(0)
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô!")
        exit(1) 
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –∞–¥–º–∏–Ω –±–æ—Ç–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_live_sync():
    print("üöÄ –¢–ï–°–¢ –ñ–ò–í–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 60)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    try:
        from utils.access_manager import has_access, add_user_access, remove_user_access
        print("‚úÖ –ò–º–ø–æ—Ä—Ç access_manager —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    test_user_id = 123456789
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    initial_access = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {initial_access}")
    
    print(f"\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    add_result = add_user_access(test_user_id)
    print(f"   add_user_access({test_user_id}): {add_result}")
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –ü–û–°–õ–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n3Ô∏è‚É£ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    time.sleep(2)
    
    print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
    access_after_add = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {access_after_add}")
    
    print(f"\n5Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    remove_result = remove_user_access(test_user_id)
    print(f"   remove_user_access({test_user_id}): {remove_result}")
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –ü–û–°–õ–ï –£–î–ê–õ–ï–ù–ò–Ø:")
    try:
        with open('data/fake_redis_sync.json', 'r') as f:
            import json
            data = json.load(f)
            print(f"   –ö–ª—é—á–µ–π –≤ —Ñ–∞–π–ª–µ: {len(data.get('data', {}))}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {data.get('data', {})}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    print(f"\n6Ô∏è‚É£ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    time.sleep(2)
    
    print(f"\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:")
    access_after_remove = has_access(test_user_id)
    print(f"   has_access({test_user_id}): {access_after_remove}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success = (
        initial_access == False and
        add_result == True and
        access_after_add == True and
        remove_result == True and
        access_after_remove == False
    )
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print("‚ùå –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ù–ï –ü–†–û–®–ï–õ!")
        print(f"   –î–µ—Ç–∞–ª–∏: initial={initial_access}, add={add_result}")
        print(f"           after_add={access_after_add}, remove={remove_result}")
        print(f"           after_remove={access_after_remove}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –ñ–ò–í–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    success = test_live_sync()
    
    if success:
        print("\n‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ Telegram –±–æ—Ç–µ!")
        exit(0)
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô!")
        exit(1) 