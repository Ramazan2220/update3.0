#!/usr/bin/env python3
"""
üõ°Ô∏è –ù–ï–í–ò–î–ò–ú–´–ô –ü–ê–¢–ß –ò–ó–û–õ–Ø–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç user_id –≤ get_instagram_accounts() –∏ get_instagram_account()
–ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞ —Å–∏—Å—Ç–µ–º—ã!
"""

import logging
import functools
from typing import Optional, List, Any
from database.user_context_manager import UserContextManager

logger = logging.getLogger(__name__)

class InvisibleUserPatch:
    """üõ°Ô∏è –ù–µ–≤–∏–¥–∏–º—ã–π –ø–∞—Ç—á –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    def __init__(self):
        self.original_functions = {}
        self.patched = False
        
    def apply_patch(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π –ø–∞—Ç—á –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        if self.patched:
            logger.warning("üîß –ü–∞—Ç—á —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω")
            return
            
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–∞—Ç—á–∏–Ω–≥–µ
            import database.db_manager as db_manager
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            self.original_functions['get_instagram_accounts'] = db_manager.get_instagram_accounts
            self.original_functions['get_instagram_account'] = db_manager.get_instagram_account
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á–∏
            db_manager.get_instagram_accounts = self._patch_get_accounts(
                db_manager.get_instagram_accounts
            )
            db_manager.get_instagram_account = self._patch_get_account(
                db_manager.get_instagram_account
            )
            
            self.patched = True
            logger.info("üõ°Ô∏è ‚úÖ –ù–µ–≤–∏–¥–∏–º—ã–π –ø–∞—Ç—á –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ –ø–∞—Ç—á–∞: {e}")
            
    def _patch_get_accounts(self, original_func):
        """–ü–∞—Ç—á –¥–ª—è get_instagram_accounts"""
        @functools.wraps(original_func)
        def patched_function(user_id: Optional[int] = None):
            # –ï—Å–ª–∏ user_id –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            if user_id is None:
                current_user = UserContextManager.get_current_user()
                if current_user is not None:
                    user_id = current_user
                    logger.debug(f"üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω user_id: {user_id}")
                else:
                    logger.warning("‚ö†Ô∏è –í—ã–∑–æ–≤ get_instagram_accounts –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å")
            
            return original_func(user_id)
        
        return patched_function
    
    def _patch_get_account(self, original_func):
        """–ü–∞—Ç—á –¥–ª—è get_instagram_account"""
        @functools.wraps(original_func)
        def patched_function(account_id: int, user_id: Optional[int] = None):
            # –ï—Å–ª–∏ user_id –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            if user_id is None:
                current_user = UserContextManager.get_current_user()
                if current_user is not None:
                    user_id = current_user
                    logger.debug(f"üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω user_id: {user_id} –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {account_id}")
                else:
                    logger.warning(f"‚ö†Ô∏è –í—ã–∑–æ–≤ get_instagram_account({account_id}) –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å")
            
            return original_func(account_id, user_id)
        
        return patched_function
    
    def remove_patch(self):
        """–£–¥–∞–ª—è–µ—Ç –ø–∞—Ç—á –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
        if not self.patched:
            logger.warning("üîß –ü–∞—Ç—á –Ω–µ –±—ã–ª –ø—Ä–∏–º–µ–Ω–µ–Ω")
            return
            
        try:
            import database.db_manager as db_manager
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            db_manager.get_instagram_accounts = self.original_functions['get_instagram_accounts']
            db_manager.get_instagram_account = self.original_functions['get_instagram_account']
            
            self.patched = False
            logger.info("üõ°Ô∏è –ù–µ–≤–∏–¥–∏–º—ã–π –ø–∞—Ç—á –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–¥–∞–ª–µ–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ –ø–∞—Ç—á–∞: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–∞—Ç—á–∞
_global_patch = InvisibleUserPatch()

def activate_invisible_user_isolation():
    """üõ°Ô∏è –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –Ω–µ–≤–∏–¥–∏–º—É—é –∏–∑–æ–ª—è—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    _global_patch.apply_patch()

def deactivate_invisible_user_isolation():
    """üõ°Ô∏è –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –Ω–µ–≤–∏–¥–∏–º—É—é –∏–∑–æ–ª—è—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    _global_patch.remove_patch() 